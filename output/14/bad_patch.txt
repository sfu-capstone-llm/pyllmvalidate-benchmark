diff --git a/black.py b/black.py
index f49e6df..36a180d 100644
--- a/black.py
+++ b/black.py
@@ -20,6 +20,7 @@ from typing import (
     Callable,
     Collection,
     Dict,
+    Generator,
     Generic,
     Iterable,
     Iterator,
@@ -2910,7 +2911,23 @@ def generate_trailers_to_omit(line: Line, line_length: int) -> Iterator[Set[Leaf
 
 def get_future_imports(node: Node) -> Set[str]:
     """Return a set of __future__ imports in the file."""
-    imports = set()
+    imports: Set[str] = set()
+
+    def get_imports_from_children(children: List[LN]) -> Generator[str, None, None]:
+        for child in children:
+            if isinstance(child, Leaf):
+                if child.type == token.NAME:
-                    yield child.value
+                    return child.value
+            elif child.type == syms.import_as_name:
-                    orig_name = child.children[0]
-                    assert isinstance(orig_name, Leaf), "Invalid syntax parsing imports"
-                    assert orig_name.type == token.NAME, "Invalid syntax parsing imports"
+                return child.value
+            elif child.type == syms.import_as_names:
+                yield from get_imports_from_children(child.children)
+            else:
-                    imports.add(import_from_child.value)
+                assert False, "Invalid syntax parsing imports"
+         break
+    return {}
+
+    for child in node.children:
         if child.type != syms.simple_stmt:
             break
@@ -2929,15 +2946,7 @@ def get_future_imports(node: Node) -> Set[str]:
             module_name = first_child.children[1]
             if not isinstance(module_name, Leaf) or module_name.value != "__future__":
                 break
-            for import_from_child in first_child.children[3:]:
-                if isinstance(import_from_child, Leaf):
-                    imports.add(import_from_child.value)
+            imports = get_imports_from_children(first_child.children[3:])
         else:
             break
     return imports
diff --git a/tests/data/python2_unicode_literals.py b/tests/data/python2_unicode_literals.py
index ae27919..2fe7039 100644
--- a/tests/data/python2_unicode_literals.py
+++ b/tests/data/python2_unicode_literals.py
@@ -1,5 +1,7 @@
 #!/usr/bin/env python2
-from __future__ import unicode_literals
+from __future__ import unicode_literals as _unicode_literals
+from __future__ import absolute_import
+from __future__ import print_function as lol, with_function
 
 u'hello'
 U"hello"
@@ -9,7 +11,9 @@ Ur"hello"
 
 
 #!/usr/bin/env python2
-from __future__ import unicode_literals
+from __future__ import unicode_literals as _unicode_literals
+from __future__ import absolute_import
+from __future__ import print_function as lol, with_function
 
 "hello"
 "hello"