
# Description

# PR - fix handling of comments in from imports

Fixes #671

# Issue 671 - Black produces invalid code with commented out multi-line includes

Howdy! Sorry you're having trouble. To expedite your experience,
provide some basics for me:

Operating system: MacOS
Python version: Python 3.7.1
Black version: 18.9b0
Does also happen on master: Yes

repro:

(black-repro) [schrockn@mbp ~/code/playground/black_bug_repro]$ black test.py
error: cannot format test.py: INTERNAL ERROR: Black produced invalid code: invalid syntax (<unknown>, line 11). Please report a bug on https://github.com/ambv/black/issues.  This invalid output might be helpful: /var/folders/nb/18_t4vkx595_cnpf8nz5gt_80000gn/T/blk_di3puv3v.log
All done! ðŸ’¥ ðŸ’” ðŸ’¥
1 file failed to reformat.
test file:

from .config import (
    Any,
    Bool,
    ConfigType,
    ConfigTypeAttributes,
    Int,
    Path,
    #  String,
    #  resolve_to_config_type,
    #  DEFAULT_TYPE_ATTRIBUTES,
)
The invalid output:

(black-repro) [schrockn@mbp ~/code/playground/black_bug_repro]$ more /var/folders/nb/18_t4vkx595_cnpf8nz5gt_80000gn/T/blk_di3puv3v.log
  File "/Users/schrockn/code/githubs/black/black.py", line 3318, in assert_equivalent
    dst_ast = ast.parse(dst)
  File "/Users/schrockn/.pyenv/versions/3.7.1/lib/python3.7/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
from .config import (
    Any,
    Bool,
    ConfigType,
    ConfigTypeAttributes,
    Int,
    Path,
    #  String,
    #  resolve_to_config_type,
    #  DEFAULT_TYPE_ATTRIBUTES,
    ,
)
Thanks!

# Diff

diff --git a/black.py b/black.py
index dd6e372..9ecfbe1 100644
--- a/black.py
+++ b/black.py
@@ -2405,10 +2405,17 @@ def bracket_split_build_line(
         if leaves:
             # Since body is a new indent level, remove spurious leading whitespace.
             normalize_prefix(leaves[0], inside_brackets=True)
-            # Ensure a trailing comma when expected.
+            # Ensure a trailing comma for imports, but be careful not to add one after
+            # any comments.
             if original.is_import:
-                if leaves[-1].type != token.COMMA:
-                    leaves.append(Leaf(token.COMMA, ","))
+                for i in range(len(leaves) - 1, -1, -1):
+                    if leaves[i].type == STANDALONE_COMMENT:
+                        continue
+                    elif leaves[i].type == token.COMMA:
+                        break
+                    else:
+                        leaves.insert(i + 1, Leaf(token.COMMA, ","))
+                        break
     # Populate the line
     for leaf in leaves:
         result.append(leaf, preformatted=True)


# Method Trace

blib2to3.pgen2.tokenize.any->blib2to3.pgen2.tokenize.group
blib2to3.pgen2.tokenize.maybe->blib2to3.pgen2.tokenize.group
blib2to3.pgen2.tokenize._combinations->blib2to3.pgen2.tokenize.<genexpr>
blib2to3.pygram.initialize->blib2to3.pgen2.driver.load_packaged_grammar
blib2to3.pygram.initialize->blib2to3.pgen2.grammar.copy
blib2to3.pygram.initialize->blib2to3.pygram.__init__
blib2to3.pgen2.driver.load_packaged_grammar->blib2to3.pgen2.driver.load_grammar
blib2to3.pgen2.driver.load_packaged_grammar->genericpath.isfile
blib2to3.pgen2.driver.load_packaged_grammar->blib2to3.pgen2.driver._generate_pickle_name
blib2to3.pgen2.driver._generate_pickle_name->posixpath.basename
blib2to3.pgen2.driver._generate_pickle_name->posixpath.join
blib2to3.pgen2.driver._generate_pickle_name->posixpath.splitext
blib2to3.pgen2.driver.load_grammar->logging.info
blib2to3.pgen2.driver.load_grammar->logging.getLogger
blib2to3.pgen2.driver.load_grammar->blib2to3.pgen2.driver._newer
blib2to3.pgen2.driver.load_grammar->blib2to3.pgen2.grammar.dump
blib2to3.pgen2.driver.load_grammar->tempfile.__del__
blib2to3.pgen2.driver.load_grammar->blib2to3.pgen2.pgen.generate_grammar
blib2to3.pgen2.driver.load_grammar->blib2to3.pgen2.tokenize.generate_tokens
blib2to3.pgen2.driver._newer->genericpath.getmtime
blib2to3.pgen2.driver._newer->genericpath.exists
blib2to3.pgen2.pgen.generate_grammar->blib2to3.pgen2.pgen.make_grammar
blib2to3.pgen2.pgen.generate_grammar->blib2to3.pgen2.pgen.__init__
blib2to3.pgen2.pgen.__init__->blib2to3.pgen2.pgen.addfirstsets
blib2to3.pgen2.pgen.__init__->blib2to3.pgen2.pgen.gettoken
blib2to3.pgen2.pgen.__init__->_bootlocale.getpreferredencoding
blib2to3.pgen2.pgen.__init__->blib2to3.pgen2.pgen.parse
blib2to3.pgen2.pgen.__init__->codecs.__init__
blib2to3.pgen2.pgen.gettoken->blib2to3.pgen2.tokenize.generate_tokens
blib2to3.pgen2.tokenize.generate_tokens->codecs.decode
blib2to3.pgen2.tokenize.generate_tokens->codecs.getstate
blib2to3.pgen2.pgen.parse->blib2to3.pgen2.pgen.make_dfa
blib2to3.pgen2.pgen.parse->blib2to3.pgen2.pgen.expect
blib2to3.pgen2.pgen.parse->blib2to3.pgen2.pgen.parse_rhs
blib2to3.pgen2.pgen.parse->blib2to3.pgen2.pgen.simplify_dfa
blib2to3.pgen2.pgen.expect->blib2to3.pgen2.pgen.gettoken
blib2to3.pgen2.pgen.parse_rhs->blib2to3.pgen2.pgen.parse_alt
blib2to3.pgen2.pgen.parse_rhs->blib2to3.pgen2.pgen.gettoken
blib2to3.pgen2.pgen.parse_rhs->blib2to3.pgen2.pgen.addarc
blib2to3.pgen2.pgen.parse_rhs->blib2to3.pgen2.pgen.__init__
blib2to3.pgen2.pgen.parse_alt->blib2to3.pgen2.pgen.addarc
blib2to3.pgen2.pgen.parse_alt->blib2to3.pgen2.pgen.parse_item
blib2to3.pgen2.pgen.parse_item->blib2to3.pgen2.pgen.gettoken
blib2to3.pgen2.pgen.parse_item->blib2to3.pgen2.pgen.addarc
blib2to3.pgen2.pgen.parse_item->blib2to3.pgen2.pgen.parse_atom
blib2to3.pgen2.pgen.parse_item->blib2to3.pgen2.pgen.expect
blib2to3.pgen2.pgen.parse_item->blib2to3.pgen2.pgen.parse_rhs
blib2to3.pgen2.pgen.parse_atom->blib2to3.pgen2.pgen.gettoken
blib2to3.pgen2.pgen.parse_atom->blib2to3.pgen2.pgen.addarc
blib2to3.pgen2.pgen.parse_atom->blib2to3.pgen2.pgen.expect
blib2to3.pgen2.pgen.parse_atom->blib2to3.pgen2.pgen.parse_rhs
blib2to3.pgen2.pgen.parse_atom->blib2to3.pgen2.pgen.__init__
blib2to3.pgen2.pgen.make_dfa->blib2to3.pgen2.pgen.closure
blib2to3.pgen2.pgen.make_dfa->blib2to3.pgen2.pgen.addarc
blib2to3.pgen2.pgen.make_dfa->blib2to3.pgen2.pgen.addclosure
blib2to3.pgen2.pgen.make_dfa->blib2to3.pgen2.pgen.__init__
blib2to3.pgen2.pgen.closure->blib2to3.pgen2.pgen.addclosure
blib2to3.pgen2.pgen.addclosure->blib2to3.pgen2.pgen.addclosure
blib2to3.pgen2.pgen.simplify_dfa->blib2to3.pgen2.pgen.__eq__
blib2to3.pgen2.pgen.simplify_dfa->blib2to3.pgen2.pgen.unifystate
blib2to3.pgen2.pgen.addfirstsets->blib2to3.pgen2.pgen.calcfirst
blib2to3.pgen2.pgen.calcfirst->blib2to3.pgen2.pgen.calcfirst
blib2to3.pgen2.pgen.make_grammar->blib2to3.pgen2.pgen.__eq__
blib2to3.pgen2.pgen.make_grammar->blib2to3.pgen2.pgen.make_first
blib2to3.pgen2.pgen.make_grammar->blib2to3.pgen2.pgen.make_label
blib2to3.pgen2.pgen.make_grammar->blib2to3.pgen2.grammar.__init__
blib2to3.pgen2.pgen.make_first->blib2to3.pgen2.pgen.make_label
blib2to3.pgen2.pgen.make_label->blib2to3.pgen2.pgen.<module>
blib2to3.pgen2.grammar.dump->tempfile.NamedTemporaryFile
blib2to3.pgen2.grammar.dump->tempfile.__getattr__
blib2to3.pgen2.grammar.dump->posixpath.dirname
blib2to3.pgen2.grammar.dump->tempfile.__exit__
blib2to3.pgen2.grammar.dump->tempfile.__enter__
blib2to3.pgen2.grammar.dump->tempfile.func_wrapper
blib2to3.pgen2.grammar.copy->blib2to3.pgen2.grammar.__init__
black.dont_increase_indentation->functools.update_wrapper
black.dont_increase_indentation->functools.wraps
black.dont_increase_indentation->typing.inner
black.format_str->black.lib2to3_parse
black.format_str->.__init__
black.format_str->black.visit
black.format_str->black.get_future_imports
black.format_str->typing.__new__
black.format_str->black.detect_target_versions
black.format_str->enum.__hash__
black.format_str->black.supports_feature
black.format_str->black.__str__
black.format_str->black.maybe_empty_lines
black.format_str->black.<setcomp>
black.format_str->black.normalize_fmt_off
black.format_str->black.split_line
black.lib2to3_parse->blib2to3.pgen2.driver.__init__
black.lib2to3_parse->black.get_grammars
black.lib2to3_parse->blib2to3.pgen2.driver.parse_string
black.lib2to3_parse->blib2to3.pgen2.tokenize.generate_tokens
blib2to3.pgen2.driver.__init__->logging.getLogger
blib2to3.pgen2.driver.parse_string->blib2to3.pgen2.driver.parse_tokens
blib2to3.pgen2.driver.parse_tokens->blib2to3.pgen2.parse.addtoken
blib2to3.pgen2.driver.parse_tokens->logging.debug
blib2to3.pgen2.driver.parse_tokens->blib2to3.pgen2.parse.setup
blib2to3.pgen2.driver.parse_tokens->blib2to3.pgen2.parse.__init__
blib2to3.pgen2.driver.parse_tokens->blib2to3.pgen2.tokenize.generate_tokens
blib2to3.pgen2.parse.addtoken->blib2to3.pgen2.parse.shift
blib2to3.pgen2.parse.addtoken->blib2to3.pgen2.parse.classify
blib2to3.pgen2.parse.addtoken->blib2to3.pgen2.parse.push
blib2to3.pgen2.parse.addtoken->blib2to3.pgen2.parse.pop
blib2to3.pgen2.parse.shift->blib2to3.pytree.convert
blib2to3.pytree.convert->blib2to3.pytree.__init__
blib2to3.pytree.convert->blib2to3.pytree.__new__
blib2to3.pgen2.parse.pop->blib2to3.pytree.convert
blib2to3.pytree.__init__->blib2to3.pytree.invalidate_sibling_maps
black.get_future_imports->typing.inner
black.detect_target_versions->black.<setcomp>
black.detect_target_versions->black.get_features_used
black.detect_target_versions->enum.__iter__
black.get_features_used->blib2to3.pytree.pre_order
blib2to3.pytree.pre_order->blib2to3.pytree.pre_order
black.normalize_fmt_off->black.convert_one_fmt_off_pair
black.convert_one_fmt_off_pair->blib2to3.pytree.prefix
black.convert_one_fmt_off_pair->blib2to3.pytree.leaves
black.convert_one_fmt_off_pair->black.list_comments
blib2to3.pytree.leaves->blib2to3.pytree.leaves
black.list_comments->black.make_comment
black.list_comments->.__init__
black.supports_feature->black.<genexpr>
black.visit->black.visit_simple_stmt
black.visit->black.visit_ENDMARKER
black.visit->black.visit_stmt
black.visit->black.visit_default
black.visit->blib2to3.pytree.type_repr
blib2to3.pytree.type_repr->importlib._bootstrap.parent
black.visit_default->black.append
black.visit_default->black.normalize_prefix
black.visit_default->black.any_open_brackets
black.visit_default->black.generate_comments
black.visit_default->black.visit_default
black.visit_default->black.visit
black.visit_simple_stmt->black.visit_default
black.visit_simple_stmt->black.line
black.line->.__init__
black.line->black.__bool__
black.visit_stmt->black.normalize_invisible_parens
black.visit_stmt->black.visit
black.normalize_invisible_parens->blib2to3.pytree.prefix
black.normalize_invisible_parens->black.is_one_tuple
blib2to3.pytree.prefix->blib2to3.pytree.prefix
blib2to3.pytree.prefix->blib2to3.pytree.changed
black.generate_comments->blib2to3.pytree.prefix
black.generate_comments->blib2to3.pytree.__init__
black.generate_comments->blib2to3.pytree.__new__
black.generate_comments->black.list_comments
black.normalize_prefix->blib2to3.pytree.prefix
blib2to3.pytree.changed->blib2to3.pytree.changed
black.append->black.maybe_remove_trailing_comma
black.append->black.whitespace
black.append->black.append_comment
black.append->blib2to3.pytree.prefix
black.append->black.is_complex_subscript
black.append->black.mark
black.mark->black.is_split_before_delimiter
black.mark->black.maybe_decrement_after_lambda_arguments
black.mark->black.maybe_decrement_after_for_loop_variable
black.mark->black.is_split_after_delimiter
black.mark->black.maybe_increment_lambda_arguments
black.mark->black.maybe_increment_for_loop_variable
black.is_split_before_delimiter->black.is_vararg
black.is_complex_subscript->black.get_open_lsqb
black.whitespace->blib2to3.pytree.prev_sibling
black.whitespace->black.preceding_leaf
blib2to3.pytree.prev_sibling->blib2to3.pytree.update_sibling_maps
black.preceding_leaf->blib2to3.pytree.prev_sibling
black.append_comment->blib2to3.pytree.prefix
black.append_comment->black.any_open_brackets
black.maybe_empty_lines->black._maybe_empty_lines
black._maybe_empty_lines->black.__bool__
black._maybe_empty_lines->black.is_decorator
black._maybe_empty_lines->blib2to3.pytree.prefix
black._maybe_empty_lines->black.is_class
black._maybe_empty_lines->black.is_def
black._maybe_empty_lines->black.is_import
black.is_decorator->black.__bool__
black.is_class->black.__bool__
black.split_line->black.contains_inner_type_comments
black.split_line->typing.inner
black.split_line->black.rhs
black.split_line->black.split_wrapper
black.split_line->black.is_comment
black.split_line->black.__str__
black.split_line->black.is_def
black.split_line->black.is_line_short_enough
black.split_line->black.split_line
black.__str__->blib2to3.pytree.prefix
black.__str__->black.__bool__
black.__str__->blib2to3.pytree.__unicode__
blib2to3.pytree.__unicode__->blib2to3.pytree.prefix
black.rhs->black.generate_trailers_to_omit
black.rhs->black.is_line_short_enough
black.rhs->black.right_hand_split
black.right_hand_split->black.ensure_visible
black.right_hand_split->black.__bool__
black.right_hand_split->black.bracket_split_succeeded_or_raise
black.right_hand_split->black.bracket_split_build_line
black.bracket_split_build_line->black.comments_after
black.bracket_split_build_line->.__init__
black.bracket_split_build_line->black.append
black.bracket_split_build_line->black.normalize_prefix
black.bracket_split_build_line->black.should_explode
black.bracket_split_build_line->blib2to3.pytree.__new__
black.bracket_split_build_line->blib2to3.pytree.__init__
black.bracket_split_build_line->black.is_import
black.is_import->black.__bool__
black.is_import->black.is_import
black.should_explode->black.max_delimiter_priority
black.max_delimiter_priority->black.<genexpr>
black.bracket_split_succeeded_or_raise->black.__bool__
black.bracket_split_succeeded_or_raise->black.__str__
black.is_line_short_enough->black.contains_standalone_comments
black.is_line_short_enough->black.__str__
black.split_wrapper->black.normalize_prefix
black.split_wrapper->black.delimiter_split
black.delimiter_split->black.__bool__
black.delimiter_split->black.comments_after
black.delimiter_split->black.is_vararg
black.delimiter_split->.__init__
black.delimiter_split->black.max_delimiter_priority
black.delimiter_split->black.append_to_line
black.delimiter_split->typing.inner
black.append_to_line->.__init__
black.append_to_line->black.append_safe
black.append_to_line->black.append
black.append_safe->black.append
black.append_safe->black.is_comment
black.visit_ENDMARKER->black.visit_default
black.visit_ENDMARKER->black.line
black.assert_equivalent->black._v
black.assert_equivalent->ast.parse
black.assert_equivalent->typing.inner
black._v->black._v
black.assert_stable->black.format_str
