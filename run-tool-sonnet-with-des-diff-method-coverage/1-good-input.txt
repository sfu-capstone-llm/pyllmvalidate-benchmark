
# Description

# PR - permits black to run in AWS Lambda:

AWS Lambda and some other virtualized environment may not permit access
to /dev/shm on Linux and as such, trying to use ProcessPoolExecutor will
fail.

As using parallelism is only a 'nice to have' feature of black, if it fails
we gracefully fallback to a monoprocess implementation, which permits black
to finish normally.

should fix #1138 and #776

# Issue #1138 - Feature request: permits to disable parallel run for system without support for it

On some virtualized environment you don't have access to /dev/shm which prevent the use of multi-processing. The most notable use case being AWS Lambda, where /dev/shm is simply not present.

A quick and dirty patch show that simply replacing https://github.com/psf/black/blob/master/black.py#L544 by None
and removing this line https://github.com/psf/black/blob/master/black.py#L559
permits black to run in AWS Lambda, which is a huge win in term of CI (as black fits perfectly the use for serverless, i.e short runtime, low memory consumption, triggered on specific event)

so it could be implemented either (or both) by providing a --no-parallel or by detecting that /dev/shm is not possible (I need to dig on how to do that) and in these case to not use the ProcessPoolExecutor

I can provide the pull request if it seems acceptable to you

# Issue #776 - Concurrency crash

Operating system: Ubuntu Xenial (on Travis)
Python version: 3.6.8
Black version: 19.3b0
Does also happen on master: Haven't tested but when through the commits since the release. No commits seem to touch the codepath we're seeing here.

black crashes on certain system configurations due to multiprocessing. Here is the traceback we're seeing.

|Traceback (most recent call last):
|  File "/usr/local/lib/XXX/virtualenv/bin/black", line 11, in <module>
|    sys.exit(patched_main())
|  File "/usr/local/lib/XXX/virtualenv/lib/python3.6/site-packages/black.py", line 3754, in patched_main
|    main()
|  File "/usr/local/lib/XXX/virtualenv/lib/python3.6/site-packages/click/core.py", line 764, in __call__
|    return self.main(*args, **kwargs)
|  File "/usr/local/lib/XXX/virtualenv/lib/python3.6/site-packages/click/core.py", line 717, in main
|    rv = self.invoke(ctx)
|  File "/usr/local/lib/XXX/virtualenv/lib/python3.6/site-packages/click/core.py", line 956, in invoke
|    return ctx.invoke(self.callback, **ctx.params)
|  File "/usr/local/lib/XXX/virtualenv/lib/python3.6/site-packages/click/core.py", line 555, in invoke
|    return callback(*args, **kwargs)
|  File "/usr/local/lib/XXX/virtualenv/lib/python3.6/site-packages/click/decorators.py", line 17, in new_func
|    return f(get_current_context(), *args, **kwargs)
|  File "/usr/local/lib/XXX/virtualenv/lib/python3.6/site-packages/black.py", line 435, in main
|    executor = ProcessPoolExecutor(max_workers=os.cpu_count())
|  File "/usr/lib/python3.6/concurrent/futures/process.py", line 402, in __init__
|    EXTRA_QUEUED_CALLS)
|  File "/usr/lib/python3.6/multiprocessing/context.py", line 102, in Queue
|    return Queue(maxsize, ctx=self.get_context())
|  File "/usr/lib/python3.6/multiprocessing/queues.py", line 42, in __init__
|    self._rlock = ctx.Lock()
|  File "/usr/lib/python3.6/multiprocessing/context.py", line 67, in Lock
|    return Lock(ctx=self.get_context())
|  File "/usr/lib/python3.6/multiprocessing/synchronize.py", line 162, in __init__
|    SemLock.__init__(self, SEMAPHORE, 1, 1, ctx=ctx)
|  File "/usr/lib/python3.6/multiprocessing/synchronize.py", line 59, in __init__
|    unlink_now)
|OSError: [Errno 30] Read-only file system
This only happens when running black on more than 1 file at a time. There should probably be an option (or codepath which tries to correct this issue) for serial execution.

# Diff

diff --git a/black.py b/black.py
index 2a913fc..fc1597a 100644
--- a/black.py
+++ b/black.py
@@ -618,7 +618,14 @@ def reformat_many(
     if sys.platform == "win32":
         # Work around https://bugs.python.org/issue26903
         worker_count = min(worker_count, 61)
-    executor = ProcessPoolExecutor(max_workers=worker_count)
+    try:
+        executor = ProcessPoolExecutor(max_workers=worker_count)
+    except OSError:
+        # we arrive here if the underlying system does not support multi-processing
+        # like in AWS Lambda, in which case we gracefully fallback to the default
+        # mono-process Executor by using None
+        executor = None
+
     try:
         loop.run_until_complete(
             schedule_formatting(
@@ -633,7 +640,8 @@ def reformat_many(
         )
     finally:
         shutdown(loop)
-        executor.shutdown()
+        if executor is not None:
+            executor.shutdown()
 
 
 async def schedule_formatting(
@@ -643,7 +651,7 @@ async def schedule_formatting(
     mode: Mode,
     report: "Report",
     loop: asyncio.AbstractEventLoop,
-    executor: Executor,
+    executor: Optional[Executor],
 ) -> None:
     """Run formatting of `sources` in parallel using the provided `executor`.
 


# Method Trace

blib2to3.pgen2.tokenize.any->blib2to3.pgen2.tokenize.group
blib2to3.pgen2.tokenize.maybe->blib2to3.pgen2.tokenize.group
blib2to3.pgen2.tokenize._combinations->blib2to3.pgen2.tokenize.<genexpr>
blib2to3.pygram.initialize->blib2to3.pgen2.grammar.copy
blib2to3.pygram.initialize->blib2to3.pgen2.driver.load_packaged_grammar
blib2to3.pygram.initialize->posixpath.dirname
blib2to3.pygram.initialize->blib2to3.pygram.__init__
blib2to3.pygram.initialize->posixpath.join
blib2to3.pgen2.driver.load_packaged_grammar->genericpath.isfile
blib2to3.pgen2.driver.load_packaged_grammar->blib2to3.pgen2.driver._generate_pickle_name
blib2to3.pgen2.driver.load_packaged_grammar->blib2to3.pgen2.driver.load_grammar
blib2to3.pgen2.driver._generate_pickle_name->posixpath.splitext
blib2to3.pgen2.driver._generate_pickle_name->posixpath.join
blib2to3.pgen2.driver._generate_pickle_name->posixpath.basename
blib2to3.pgen2.driver.load_grammar->blib2to3.pgen2.driver._newer
blib2to3.pgen2.driver.load_grammar->blib2to3.pgen2.grammar.dump
blib2to3.pgen2.driver.load_grammar->blib2to3.pgen2.pgen.generate_grammar
blib2to3.pgen2.driver.load_grammar->blib2to3.pgen2.tokenize.generate_tokens
blib2to3.pgen2.driver.load_grammar->logging.getLogger
blib2to3.pgen2.driver.load_grammar->logging.info
blib2to3.pgen2.driver._newer->genericpath.exists
blib2to3.pgen2.pgen.generate_grammar->blib2to3.pgen2.pgen.__init__
blib2to3.pgen2.pgen.generate_grammar->blib2to3.pgen2.pgen.make_grammar
blib2to3.pgen2.pgen.__init__->_bootlocale.getpreferredencoding
blib2to3.pgen2.pgen.__init__->blib2to3.pgen2.pgen.gettoken
blib2to3.pgen2.pgen.__init__->blib2to3.pgen2.pgen.addfirstsets
blib2to3.pgen2.pgen.__init__->blib2to3.pgen2.pgen.parse
blib2to3.pgen2.pgen.__init__->codecs.__init__
blib2to3.pgen2.pgen.gettoken->blib2to3.pgen2.tokenize.generate_tokens
blib2to3.pgen2.tokenize.generate_tokens->codecs.decode
blib2to3.pgen2.tokenize.generate_tokens->codecs.getstate
blib2to3.pgen2.pgen.parse->blib2to3.pgen2.pgen.simplify_dfa
blib2to3.pgen2.pgen.parse->blib2to3.pgen2.pgen.make_dfa
blib2to3.pgen2.pgen.parse->blib2to3.pgen2.pgen.parse_rhs
blib2to3.pgen2.pgen.parse->blib2to3.pgen2.pgen.expect
blib2to3.pgen2.pgen.expect->blib2to3.pgen2.pgen.gettoken
blib2to3.pgen2.pgen.parse_rhs->blib2to3.pgen2.pgen.__init__
blib2to3.pgen2.pgen.parse_rhs->blib2to3.pgen2.pgen.addarc
blib2to3.pgen2.pgen.parse_rhs->blib2to3.pgen2.pgen.gettoken
blib2to3.pgen2.pgen.parse_rhs->blib2to3.pgen2.pgen.parse_alt
blib2to3.pgen2.pgen.parse_alt->blib2to3.pgen2.pgen.addarc
blib2to3.pgen2.pgen.parse_alt->blib2to3.pgen2.pgen.parse_item
blib2to3.pgen2.pgen.parse_item->blib2to3.pgen2.pgen.addarc
blib2to3.pgen2.pgen.parse_item->blib2to3.pgen2.pgen.expect
blib2to3.pgen2.pgen.parse_item->blib2to3.pgen2.pgen.gettoken
blib2to3.pgen2.pgen.parse_item->blib2to3.pgen2.pgen.parse_atom
blib2to3.pgen2.pgen.parse_item->blib2to3.pgen2.pgen.parse_rhs
blib2to3.pgen2.pgen.parse_atom->blib2to3.pgen2.pgen.addarc
blib2to3.pgen2.pgen.parse_atom->blib2to3.pgen2.pgen.expect
blib2to3.pgen2.pgen.parse_atom->blib2to3.pgen2.pgen.gettoken
blib2to3.pgen2.pgen.parse_atom->blib2to3.pgen2.pgen.__init__
blib2to3.pgen2.pgen.parse_atom->blib2to3.pgen2.pgen.parse_rhs
blib2to3.pgen2.pgen.make_dfa->blib2to3.pgen2.pgen.addarc
blib2to3.pgen2.pgen.make_dfa->typing.inner
blib2to3.pgen2.pgen.make_dfa->blib2to3.pgen2.pgen.addclosure
blib2to3.pgen2.pgen.make_dfa->blib2to3.pgen2.pgen.closure
blib2to3.pgen2.pgen.make_dfa->blib2to3.pgen2.pgen.__init__
blib2to3.pgen2.pgen.closure->blib2to3.pgen2.pgen.addclosure
blib2to3.pgen2.pgen.addclosure->blib2to3.pgen2.pgen.addclosure
blib2to3.pgen2.pgen.simplify_dfa->blib2to3.pgen2.pgen.__eq__
blib2to3.pgen2.pgen.simplify_dfa->blib2to3.pgen2.pgen.unifystate
blib2to3.pgen2.pgen.addfirstsets->blib2to3.pgen2.pgen.calcfirst
blib2to3.pgen2.pgen.calcfirst->blib2to3.pgen2.pgen.calcfirst
blib2to3.pgen2.pgen.make_grammar->blib2to3.pgen2.grammar.__init__
blib2to3.pgen2.pgen.make_grammar->blib2to3.pgen2.pgen.make_label
blib2to3.pgen2.pgen.make_grammar->blib2to3.pgen2.pgen.__eq__
blib2to3.pgen2.pgen.make_grammar->blib2to3.pgen2.pgen.make_first
blib2to3.pgen2.pgen.make_first->blib2to3.pgen2.pgen.make_label
blib2to3.pgen2.pgen.make_label->blib2to3.pgen2.pgen.<module>
blib2to3.pgen2.grammar.dump->posixpath.dirname
blib2to3.pgen2.grammar.dump->tempfile.NamedTemporaryFile
blib2to3.pgen2.grammar.copy->blib2to3.pgen2.grammar.__init__
black.dont_increase_indentation->functools.wraps
black.dont_increase_indentation->typing.inner
black.dont_increase_indentation->functools.update_wrapper
black.write_cache->pathlib.mkdir
black.write_cache->tempfile.func_wrapper
black.write_cache->pathlib.__fspath__
black.write_cache->pathlib.parent
black.write_cache->black.get_cache_file
black.write_cache->pathlib.__str__
black.write_cache->pathlib.__reduce__
black.write_cache->tempfile.__getattr__
black.write_cache->tempfile.__enter__
black.write_cache->tempfile.NamedTemporaryFile
black.write_cache->black.<dictcomp>
black.write_cache->tempfile.__exit__
black.get_cache_file->black.get_cache_key
black.get_cache_file->pathlib.__truediv__
black.get_cache_info->pathlib.stat
black.read_pyproject_toml->black.parse_pyproject_toml
black.parse_pyproject_toml->toml.decoder.load
black.parse_pyproject_toml->black.<dictcomp>
black.target_version_option_callback->black.<listcomp>
black.main->black.return_code
black.main->pathlib.__new__
black.main->click.core.exit
black.main->black.__init__
black.main->black.from_configuration
black.main->black.gen_python_files_in_dir
black.main->black.reformat_many
black.main->black.find_project_root
black.main->black.re_compile_maybe_verbose
black.main->click.termui.secho
black.main->pathlib.__hash__
black.main->black.get_gitignore
black.main->black.__str__
black.main->pathlib.is_dir
black.main->black.path_empty
black.re_compile_maybe_verbose->regex.regex.compile
black.find_project_root->pathlib.exists
black.find_project_root->pathlib.is_dir
black.find_project_root->black.<genexpr>
black.find_project_root->pathlib.parents
black.find_project_root->pathlib.is_file
black.find_project_root->pathlib.__truediv__
black.find_project_root->collections.abc.__iter__
black.get_gitignore->pathlib.is_file
black.get_gitignore->pathlib.__truediv__
black.get_gitignore->pathspec.pathspec.from_lines
black.gen_python_files_in_dir->pathlib.iterdir
black.gen_python_files_in_dir->pathspec.pathspec.match_file
black.gen_python_files_in_dir->pathlib.as_posix
black.gen_python_files_in_dir->pathlib.is_absolute
black.gen_python_files_in_dir->pathlib.resolve
black.gen_python_files_in_dir->pathlib.is_file
black.gen_python_files_in_dir->pathlib.is_dir
black.gen_python_files_in_dir->pathlib.relative_to
black.reformat_many->_weakrefset._remove
black.reformat_many->asyncio.events.get_event_loop_policy
black.reformat_many->asyncio.base_events.run_until_complete
black.reformat_many->black.shutdown
black.reformat_many->asyncio.events.get_event_loop
black.reformat_many->unittest.mock.__call__
black.read_cache->pathlib.__new__
black.read_cache->pathlib.exists
black.read_cache->black.get_cache_file
black.read_cache->pathlib.__hash__
black.read_cache->pathlib.open
black.filter_cached->pathlib.__eq__
black.filter_cached->black.get_cache_info
black.filter_cached->pathlib.resolve
black.filter_cached->pathlib.__hash__
black.done->click.termui.secho
black.done->pathlib.__str__
black.shutdown->logging.setLevel
black.shutdown->asyncio.tasks.all_tasks
black.shutdown->black.<listcomp>
black.shutdown->asyncio.unix_events.close
black.shutdown->logging.getLogger
black.__str__->click.termui.style

# Coverage

Name                              Stmts   Miss  Cover   Missing
---------------------------------------------------------------
black.py                           2842   1747    39%   64, 120, 123, 154, 157, 178, 246, 271-273, 295-297, 301-302, 309-321, 491-495, 497-501, 512, 514-515, 518-520, 523-525, 538-542, 544-546, 549, 574-576, 587-609, 620, 644, 670, 678-679, 692-694, 700, 702, 713, 732, 739-740, 745-763, 770-781, 794-809, 821-846, 857, 861, 902, 943, 965-987, 1001-1010, 1013, 1019-1020, 1062-1079, 1087-1090, 1232, 1244, 1248, 1266, 1273-1277, 1286-1288, 1300-1302, 1313-1315, 1326-1328, 1364, 1383-1392, 1407, 1421, 1432, 1436-1437, 1442, 1461, 1467, 1471, 1474, 1477-1481, 1486, 1493-1494, 1498-1499, 1513, 1526, 1536, 1552-1555, 1564-1572, 1577-1605, 1608, 1617-1645, 1653-1654, 1659-1682, 1686, 1690-1692, 1702-1710, 1715, 1733, 1786, 1789-1793, 1795, 1803, 1810, 1817-1856, 1893-1906, 1913, 1921-1922, 1929-1936, 1952-1957, 1961-1964, 1970-1975, 1984-1995, 1999-2001, 2005, 2013-2015, 2022-2032, 2039-2042, 2095, 2103, 2109, 2112-2118, 2121-2134, 2137-2138, 2141-2142, 2149, 2160, 2167-2168, 2172-2173, 2177-2190, 2194-2197, 2204-2306, 2317-2324, 2333, 2335, 2337, 2340, 2345-2348, 2356-2373, 2385, 2401, 2409, 2416, 2419, 2426, 2437-2441, 2448, 2451, 2454, 2466, 2478, 2481, 2510, 2538-2565, 2576-2584, 2600-2601, 2627-2656, 2671-2676, 2687-2688, 2766, 2777-2786, 2832, 2842-2843, 2858-2863, 2870-2871, 2908, 2911, 2916-2940, 2956-2976, 2989-3119, 3139-3179, 3215, 3223-3241, 3246-3273, 3310-3319, 3332-3362, 3379-3468, 3521-3557, 3560-3758, 3784-3855, 3858-3859, 3874-3886, 3939-3965, 3980-3990, 4005-4017, 4032-4052, 4067-4099, 4113-4137, 4140-4232, 4304-4305, 4318-4323, 4339-4374, 4393-4397, 4446-4458, 4466-4467, 4477-4480, 4484, 4492, 4543-4551, 4562-4568, 4579-4587, 4606-4620, 4632-4658, 4675-4747, 4764-4770, 4784-4815, 4826-4828, 4840-4900, 4908-4931, 4936-4939, 4951-4953, 4967, 4986, 5000, 5003-5004, 5013, 5021-5027, 5033-5034, 5038-5050, 5054, 5058, 5072-5099, 5104-5108, 5120-5164, 5182-5223, 5233-5246, 5250-5256, 5260-5270, 5274-5277, 5288-5313, 5320-5324, 5336, 5348-5355, 5366-5373, 5378-5385, 5394-5395, 5400-5416, 5430-5439, 5444, 5449-5457, 5462-5469, 5482-5501, 5510-5513, 5519-5533, 5550, 5553-5554, 5557-5558, 5561, 5568-5580, 5603-5640, 5648-5663, 5667, 5672-5679, 5682-5686, 5699-5700, 5723-5724, 5729-5740, 5743, 5747-5748, 5751, 5772, 5780, 5783, 5786, 5812-5816, 5821-5822, 5825-5826, 5840, 5843, 5853-5855, 5870-5871, 5884-5893, 5904, 5907, 5927, 5945-5946, 5974-5975, 5982-5984, 5993-5994, 6005-6009, 6019-6026, 6035, 6040-6044, 6051-6053, 6062, 6068-6070, 6097, 6104-6107, 6117-6129, 6138, 6153-6179, 6189-6268, 6282, 6287-6288, 6324-6325, 6339-6347, 6351-6353, 6358-6380, 6384
blackd.py                           116     83    28%   51-55, 59-73, 77-149, 153-184, 188-190, 194
env/src/black/_black_version.py       1      0   100%
tests/__init__.py                     0      0   100%
tests/test_black.py                1428   1114    22%   27-28, 48, 53-71, 79, 86-94, 99-105, 137-153, 166-172, 176-180, 183-191, 194, 197, 200, 203, 206, 209, 212, 215, 218, 221, 224, 227, 230, 233-242, 245-265, 268-287, 291-295, 299-303, 307-311, 315-319, 323-328, 331-336, 339-350, 353-375, 378-394, 398-402, 406-411, 414-419, 423-432, 436-440, 444-448, 453-457, 462-466, 470-474, 478-482, 486-490, 494-498, 502-506, 510-514, 518-522, 526-530, 534-538, 542-546, 550-554, 558-562, 566-570, 574-578, 582-586, 590-595, 599-604, 608-611, 615-619, 623-628, 632-636, 640-644, 648-659, 663-674, 678-684, 688-692, 696-700, 704-708, 712-716, 720-724, 728-732, 736-740, 744-748, 752-756, 759-778, 781-876, 883-970, 977-1067, 1074-1096, 1099-1127, 1130-1157, 1160-1177, 1184-1201, 1204-1207, 1211-1227, 1230-1241, 1244-1252, 1256-1274, 1298-1305, 1308-1315, 1318-1320, 1323-1330, 1333-1346, 1349-1353, 1357-1370, 1373-1376, 1380-1388, 1391-1393, 1396-1402, 1405-1414, 1417-1421, 1424-1439, 1443-1464, 1467-1473, 1476-1491, 1495-1516, 1519-1523, 1526-1534, 1537-1553, 1556-1574, 1577-1604, 1607-1631, 1634-1635, 1638-1647, 1650-1660, 1663-1664, 1667-1705, 1708-1727, 1730-1742, 1746-1750, 1753-1760, 1765, 1773-1776, 1782-1784, 1790-1793, 1802-1805, 1811-1814, 1820-1834, 1840-1845, 1851-1865, 1871-1903, 1909-1912, 1918-1921, 1927-1928, 1932
---------------------------------------------------------------
TOTAL                              4387   2944    33%

