
# Description

# PR - fix bracket match bug

Fixes #468.

# Issue #468 - Formatting fails on lambda expression with default argument

Operating system: Win 10 1803 x64
Python version: 3.6.5
Black version: 18.6b4
Does also happen on master: Yes

The following snippet appears to be valid Python code but trips black:

pem_spam = lambda l, spam = {
    "-----BEGIN PKCS7-----": True, "-----END PKCS7-----": True, "": True
}: not spam.get(l.strip())
Found at https://github.com/fonttools/fonttools/blob/master/Lib/fontTools/ttLib/tables/D_S_I_G_.py#L101.

# Diff

diff --git a/black.py b/black.py
index 85cb45b..0f166c6 100644
--- a/black.py
+++ b/black.py
@@ -877,8 +877,8 @@ class BracketTracker:
     bracket_match: Dict[Tuple[Depth, NodeType], Leaf] = Factory(dict)
     delimiters: Dict[LeafID, Priority] = Factory(dict)
     previous: Optional[Leaf] = None
-    _for_loop_variable: int = 0
-    _lambda_arguments: int = 0
+    _for_loop_depths: List[int] = Factory(list)
+    _lambda_argument_depths: List[int] = Factory(list)
 
     def mark(self, leaf: Leaf) -> None:
         """Mark `leaf` with bracket-related metadata. Keep track of delimiters.
@@ -951,16 +951,21 @@ class BracketTracker:
         """
         if leaf.type == token.NAME and leaf.value == "for":
             self.depth += 1
-            self._for_loop_variable += 1
+            self._for_loop_depths.append(self.depth)
             return True
 
         return False
 
     def maybe_decrement_after_for_loop_variable(self, leaf: Leaf) -> bool:
         """See `maybe_increment_for_loop_variable` above for explanation."""
-        if self._for_loop_variable and leaf.type == token.NAME and leaf.value == "in":
+        if (
+            self._for_loop_depths
+            and self._for_loop_depths[-1] == self.depth
+            and leaf.type == token.NAME
+            and leaf.value == "in"
+        ):
             self.depth -= 1
-            self._for_loop_variable -= 1
+            # self._for_loop_depths.pop()
             return True
 
         return False
@@ -973,16 +978,20 @@ class BracketTracker:
         """
         if leaf.type == token.NAME and leaf.value == "lambda":
             self.depth += 1
-            self._lambda_arguments += 1
+            self._lambda_argument_depths.append(self.depth)
             return True
 
         return False
 
     def maybe_decrement_after_lambda_arguments(self, leaf: Leaf) -> bool:
         """See `maybe_increment_lambda_arguments` above for explanation."""
-        if self._lambda_arguments and leaf.type == token.COLON:
+        if (
+            self._lambda_argument_depths
+            and self._lambda_argument_depths[-1] == self.depth
+            and leaf.type == token.COLON
+        ):
             self.depth -= 1
-            self._lambda_arguments -= 1
+            # self._lambda_argument_depths.pop()
             return True
 
         return False


# Method Trace

blib2to3.pgen2.tokenize.any->blib2to3.pgen2.tokenize.group
blib2to3.pgen2.tokenize.maybe->blib2to3.pgen2.tokenize.group
blib2to3.pgen2.tokenize._combinations->blib2to3.pgen2.tokenize.<genexpr>
blib2to3.pygram.initialize->blib2to3.pgen2.driver.load_packaged_grammar
blib2to3.pygram.initialize->blib2to3.pgen2.grammar.copy
blib2to3.pygram.initialize->blib2to3.pygram.__init__
blib2to3.pgen2.driver.load_packaged_grammar->genericpath.isfile
blib2to3.pgen2.driver.load_packaged_grammar->blib2to3.pgen2.driver._generate_pickle_name
blib2to3.pgen2.driver.load_packaged_grammar->blib2to3.pgen2.driver.load_grammar
blib2to3.pgen2.driver._generate_pickle_name->posixpath.splitext
blib2to3.pgen2.driver._generate_pickle_name->posixpath.join
blib2to3.pgen2.driver._generate_pickle_name->posixpath.basename
blib2to3.pgen2.driver.load_grammar->logging.getLogger
blib2to3.pgen2.driver.load_grammar->blib2to3.pgen2.driver._newer
blib2to3.pgen2.driver.load_grammar->blib2to3.pgen2.grammar.dump
blib2to3.pgen2.driver.load_grammar->blib2to3.pgen2.pgen.generate_grammar
blib2to3.pgen2.driver.load_grammar->blib2to3.pgen2.tokenize.generate_tokens
blib2to3.pgen2.driver.load_grammar->logging.info
blib2to3.pgen2.driver._newer->genericpath.exists
blib2to3.pgen2.pgen.generate_grammar->blib2to3.pgen2.pgen.__init__
blib2to3.pgen2.pgen.generate_grammar->blib2to3.pgen2.pgen.make_grammar
blib2to3.pgen2.pgen.__init__->blib2to3.pgen2.pgen.gettoken
blib2to3.pgen2.pgen.__init__->_bootlocale.getpreferredencoding
blib2to3.pgen2.pgen.__init__->codecs.__init__
blib2to3.pgen2.pgen.__init__->blib2to3.pgen2.pgen.addfirstsets
blib2to3.pgen2.pgen.__init__->blib2to3.pgen2.pgen.parse
blib2to3.pgen2.pgen.gettoken->blib2to3.pgen2.tokenize.generate_tokens
blib2to3.pgen2.tokenize.generate_tokens->codecs.getstate
blib2to3.pgen2.tokenize.generate_tokens->codecs.decode
blib2to3.pgen2.pgen.parse->blib2to3.pgen2.pgen.make_dfa
blib2to3.pgen2.pgen.parse->blib2to3.pgen2.pgen.expect
blib2to3.pgen2.pgen.parse->blib2to3.pgen2.pgen.simplify_dfa
blib2to3.pgen2.pgen.parse->blib2to3.pgen2.pgen.parse_rhs
blib2to3.pgen2.pgen.expect->blib2to3.pgen2.pgen.gettoken
blib2to3.pgen2.pgen.parse_rhs->blib2to3.pgen2.pgen.parse_alt
blib2to3.pgen2.pgen.parse_rhs->blib2to3.pgen2.pgen.__init__
blib2to3.pgen2.pgen.parse_rhs->blib2to3.pgen2.pgen.gettoken
blib2to3.pgen2.pgen.parse_rhs->blib2to3.pgen2.pgen.addarc
blib2to3.pgen2.pgen.parse_alt->blib2to3.pgen2.pgen.parse_item
blib2to3.pgen2.pgen.parse_alt->blib2to3.pgen2.pgen.addarc
blib2to3.pgen2.pgen.parse_item->blib2to3.pgen2.pgen.gettoken
blib2to3.pgen2.pgen.parse_item->blib2to3.pgen2.pgen.addarc
blib2to3.pgen2.pgen.parse_item->blib2to3.pgen2.pgen.expect
blib2to3.pgen2.pgen.parse_item->blib2to3.pgen2.pgen.parse_rhs
blib2to3.pgen2.pgen.parse_item->blib2to3.pgen2.pgen.parse_atom
blib2to3.pgen2.pgen.parse_atom->blib2to3.pgen2.pgen.gettoken
blib2to3.pgen2.pgen.parse_atom->blib2to3.pgen2.pgen.__init__
blib2to3.pgen2.pgen.parse_atom->blib2to3.pgen2.pgen.expect
blib2to3.pgen2.pgen.parse_atom->blib2to3.pgen2.pgen.parse_rhs
blib2to3.pgen2.pgen.parse_atom->blib2to3.pgen2.pgen.addarc
blib2to3.pgen2.pgen.make_dfa->blib2to3.pgen2.pgen.closure
blib2to3.pgen2.pgen.make_dfa->blib2to3.pgen2.pgen.__init__
blib2to3.pgen2.pgen.make_dfa->blib2to3.pgen2.pgen.addclosure
blib2to3.pgen2.pgen.make_dfa->blib2to3.pgen2.pgen.addarc
blib2to3.pgen2.pgen.closure->blib2to3.pgen2.pgen.addclosure
blib2to3.pgen2.pgen.addclosure->blib2to3.pgen2.pgen.addclosure
blib2to3.pgen2.pgen.simplify_dfa->blib2to3.pgen2.pgen.__eq__
blib2to3.pgen2.pgen.simplify_dfa->blib2to3.pgen2.pgen.unifystate
blib2to3.pgen2.pgen.addfirstsets->blib2to3.pgen2.pgen.calcfirst
blib2to3.pgen2.pgen.calcfirst->blib2to3.pgen2.pgen.calcfirst
blib2to3.pgen2.pgen.make_grammar->blib2to3.pgen2.pgen.__eq__
blib2to3.pgen2.pgen.make_grammar->blib2to3.pgen2.pgen.make_label
blib2to3.pgen2.pgen.make_grammar->blib2to3.pgen2.grammar.__init__
blib2to3.pgen2.pgen.make_grammar->blib2to3.pgen2.pgen.make_first
blib2to3.pgen2.pgen.make_first->blib2to3.pgen2.pgen.make_label
blib2to3.pgen2.pgen.make_label->blib2to3.pgen2.pgen.<module>
blib2to3.pgen2.grammar.copy->blib2to3.pgen2.grammar.__init__
black.dont_increase_indentation->functools.wraps
black.dont_increase_indentation->typing.inner
black.dont_increase_indentation->functools.update_wrapper
black.format_str->typing.__new__
black.format_str->enum.__and__
black.format_str->black.maybe_empty_lines
black.format_str->black.is_python36
black.format_str->black.split_line
black.format_str->black.visit
black.format_str->black.normalize_fmt_off
black.format_str->black.lib2to3_parse
black.format_str->black.__str__
black.format_str->black.get_future_imports
black.format_str->enum.__bool__
black.format_str->.__init__
black.lib2to3_parse->blib2to3.pgen2.driver.__init__
black.lib2to3_parse->blib2to3.pgen2.tokenize.generate_tokens
black.lib2to3_parse->blib2to3.pgen2.driver.parse_string
blib2to3.pgen2.driver.__init__->logging.getLogger
blib2to3.pgen2.driver.parse_string->blib2to3.pgen2.driver.parse_tokens
blib2to3.pgen2.driver.parse_tokens->blib2to3.pgen2.parse.__init__
blib2to3.pgen2.driver.parse_tokens->logging.debug
blib2to3.pgen2.driver.parse_tokens->blib2to3.pgen2.parse.addtoken
blib2to3.pgen2.driver.parse_tokens->blib2to3.pgen2.driver._partially_consume_prefix
blib2to3.pgen2.driver.parse_tokens->blib2to3.pgen2.tokenize.generate_tokens
blib2to3.pgen2.driver.parse_tokens->blib2to3.pgen2.parse.setup
blib2to3.pgen2.parse.addtoken->blib2to3.pgen2.parse.shift
blib2to3.pgen2.parse.addtoken->blib2to3.pgen2.parse.push
blib2to3.pgen2.parse.addtoken->blib2to3.pgen2.parse.pop
blib2to3.pgen2.parse.addtoken->blib2to3.pgen2.parse.classify
blib2to3.pgen2.parse.shift->blib2to3.pytree.convert
blib2to3.pytree.convert->blib2to3.pytree.__new__
blib2to3.pytree.convert->blib2to3.pytree.__init__
blib2to3.pgen2.parse.pop->blib2to3.pytree.convert
blib2to3.pytree.__init__->blib2to3.pytree.invalidate_sibling_maps
black.get_future_imports->typing.inner
black.is_python36->blib2to3.pytree.pre_order
blib2to3.pytree.pre_order->blib2to3.pytree.pre_order
black.normalize_fmt_off->black.convert_one_fmt_off_pair
black.convert_one_fmt_off_pair->black.list_comments
black.convert_one_fmt_off_pair->blib2to3.pytree.prefix
black.convert_one_fmt_off_pair->blib2to3.pytree.leaves
blib2to3.pytree.leaves->blib2to3.pytree.leaves
black.visit->black.visit_simple_stmt
black.visit->black.visit_default
black.visit->black.visit_INDENT
black.visit->black.visit_DEDENT
black.visit->black.visit_stmt
black.visit->black.visit_suite
black.visit->blib2to3.pytree.type_repr
blib2to3.pytree.type_repr->importlib._bootstrap.parent
black.visit_default->black.any_open_brackets
black.visit_default->black.visit_default
black.visit_default->black.append
black.visit_default->black.normalize_numeric_literal
black.visit_default->black.visit
black.visit_default->black.normalize_prefix
black.visit_default->black.generate_comments
black.visit_default->black.normalize_string_quotes
black.visit_default->black.normalize_string_prefix
black.visit_stmt->black.line
black.visit_stmt->black.visit
black.visit_stmt->black.normalize_invisible_parens
black.normalize_invisible_parens->blib2to3.pytree.remove
black.normalize_invisible_parens->black.is_multiline_string
black.normalize_invisible_parens->blib2to3.pytree.__init__
black.normalize_invisible_parens->blib2to3.pytree.insert_child
black.normalize_invisible_parens->blib2to3.pytree.__new__
black.normalize_invisible_parens->black.is_one_tuple
black.normalize_invisible_parens->blib2to3.pytree.prefix
blib2to3.pytree.prefix->blib2to3.pytree.changed
blib2to3.pytree.prefix->blib2to3.pytree.prefix
blib2to3.pytree.remove->blib2to3.pytree.invalidate_sibling_maps
blib2to3.pytree.remove->blib2to3.pytree.changed
blib2to3.pytree.changed->blib2to3.pytree.changed
blib2to3.pytree.insert_child->blib2to3.pytree.invalidate_sibling_maps
blib2to3.pytree.insert_child->blib2to3.pytree.changed
black.line->black.__bool__
black.line->.__init__
black.generate_comments->blib2to3.pytree.prefix
black.normalize_prefix->blib2to3.pytree.prefix
black.append->black.maybe_remove_trailing_comma
black.append->black.is_class_paren_empty
black.append->black.is_complex_subscript
black.append->black.whitespace
black.append->blib2to3.pytree.prefix
black.append->black.mark
black.append->black.append_comment
black.mark->black.maybe_decrement_after_lambda_arguments
black.mark->black.is_split_before_delimiter
black.mark->black.is_split_after_delimiter
black.mark->black.maybe_increment_lambda_arguments
black.mark->black.maybe_decrement_after_for_loop_variable
black.mark->black.maybe_increment_for_loop_variable
black.is_split_before_delimiter->black.is_vararg
black.is_complex_subscript->black.<genexpr>
black.is_complex_subscript->black.get_open_lsqb
black.is_complex_subscript->blib2to3.pytree.pre_order
black.is_complex_subscript->blib2to3.pytree.next_sibling
black.whitespace->blib2to3.pytree.prev_sibling
black.whitespace->black.preceding_leaf
blib2to3.pytree.prev_sibling->blib2to3.pytree.update_sibling_maps
black.preceding_leaf->blib2to3.pytree.prev_sibling
black.preceding_leaf->blib2to3.pytree.leaves
black.normalize_string_prefix->re.match
black.normalize_string_quotes->re.compile
black.normalize_string_quotes->black.sub_twice
black.sub_twice->re._subx
black.is_class_paren_empty->black.__bool__
black.visit_suite->black.visit_default
black.visit_INDENT->black.line
black.visit_INDENT->black.visit_default
black.maybe_empty_lines->black._maybe_empty_lines
black._maybe_empty_lines->black.__bool__
black._maybe_empty_lines->black.is_def
black._maybe_empty_lines->black.is_class
black._maybe_empty_lines->black.is_import
black._maybe_empty_lines->black.is_decorator
black._maybe_empty_lines->blib2to3.pytree.prefix
black.is_decorator->black.__bool__
black.is_class->black.__bool__
black.split_line->black.is_comment
black.split_line->black.is_line_short_enough
black.split_line->black.__str__
black.__str__->black.__bool__
black.__str__->blib2to3.pytree.__unicode__
black.__str__->blib2to3.pytree.prefix
blib2to3.pytree.__unicode__->blib2to3.pytree.prefix
black.is_line_short_enough->black.contains_standalone_comments
black.visit_simple_stmt->black.line
black.visit_simple_stmt->black.visit_default
black.visit_DEDENT->black.line
black.visit_DEDENT->black.visit_default
black.is_import->black.__bool__
black.is_import->black.is_import
black.normalize_numeric_literal->black.format_float_or_int_string
black.format_float_or_int_string->black.format_int_string

# Coverage

Name                  Stmts   Miss  Cover   Missing
---------------------------------------------------
black.py               1838   1143    38%   101-104, 123-130, 141-164, 297-363, 380-408, 428-485, 502-537, 553-574, 590-600, 628, 631, 634, 643-651, 665, 672-681, 684, 690-691, 728-745, 753-756, 899, 911, 915, 933, 940-944, 1027, 1030, 1049-1058, 1087, 1096-1097, 1129, 1139-1140, 1145-1149, 1160-1203, 1211-1212, 1217-1225, 1232-1245, 1249-1254, 1266, 1269, 1277, 1286, 1332, 1335-1339, 1341, 1349, 1356, 1363-1402, 1440-1453, 1509, 1517-1522, 1531-1542, 1546-1548, 1552, 1556-1557, 1560-1562, 1612, 1629-1635, 1651, 1654-1655, 1666, 1677, 1684-1685, 1694-1707, 1711-1714, 1735-1744, 1748, 1751-1756, 1759-1763, 1768-1772, 1775, 1780, 1785, 1789-1806, 1809-1818, 1821, 1837-1838, 1841, 1846-1849, 1857-1874, 1886, 1902, 1910, 1917, 1920, 1927, 1937, 1944, 1947, 1950, 1962, 1974, 1977, 2006, 2023-2044, 2055-2063, 2080-2081, 2091-2132, 2142-2174, 2188-2270, 2287-2293, 2307-2309, 2321-2375, 2381-2404, 2432, 2451, 2465, 2468-2469, 2478, 2486-2492, 2498-2499, 2503-2507, 2510, 2514, 2531, 2533-2542, 2544-2546, 2557-2560, 2571-2578, 2591-2593, 2599-2603, 2606-2609, 2613-2621, 2648-2689, 2699-2707, 2716-2735, 2740, 2751-2762, 2773-2789, 2803-2812, 2823-2831, 2836-2843, 2856-2875, 2884-2887, 2892-2906, 2921, 2925, 2932-2939, 2954-2995, 3003-3015, 3020-3037, 3055-3081, 3094-3111, 3127-3139, 3143-3144, 3147-3148, 3161-3167, 3174-3196, 3202-3254, 3266-3272, 3282-3291, 3296-3300, 3307-3309, 3314-3331, 3348-3350, 3355-3358, 3368-3381, 3390, 3405-3431, 3441-3520, 3524, 3532-3542, 3547-3548, 3557-3564, 3571-3579, 3593-3601, 3605-3606
tests/__init__.py         0      0   100%
tests/test_black.py     974    809    17%   31, 53, 59-64, 69-79, 88-89, 93-99, 106-122, 126-130, 133-141, 145-150, 154-159, 162-172, 175-190, 194-199, 203-207, 211-215, 219-223, 226-237, 240-265, 269-273, 277-286, 290-294, 298-302, 306-310, 314-318, 322-326, 330-334, 338-342, 346-350, 354-358, 362-366, 370-374, 378-382, 386-389, 393-397, 401-404, 408-412, 416-422, 426-430, 434-438, 442-446, 450-454, 460-462, 465-553, 560-640, 647-730, 737-756, 759-786, 789-806, 813-829, 832-835, 839-855, 858-870, 873-882, 886-905, 908-916, 919-926, 929-931, 934-941, 944-957, 960-964, 968-982, 985-988, 992-1005, 1008-1011, 1014-1021, 1024-1032, 1035-1051, 1055-1077, 1080-1086, 1089-1105, 1109-1133, 1136-1142, 1145-1158, 1161-1182, 1185-1203, 1206-1208, 1211-1220, 1223-1224, 1227-1255, 1258-1277, 1281
---------------------------------------------------
TOTAL                  2812   1952    31%

